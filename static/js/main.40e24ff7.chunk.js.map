{"version":3,"sources":["app/components/forms/inputs/file-loader/file-loader.module.scss","app/components/forms/inputs/radio-or-check/radio-or-check.input.module.scss","app/components/forms/controls/controls.module.scss","app/components/layout/centered-container/centered-container.module.scss","app/components/common/chip/chip.module.scss","app/components/forms/inputs/editor/editor.module.scss","app/components/layout/centered-container/centered-container.tsx","app/components/common/chip/chip.tsx","app/components/common/title/title.tsx","utils/index.ts","utils/common/global.ts","app/components/forms/inputs/editor/editor.tsx","app/components/forms/inputs/file-loader/file-loader.tsx","app/components/forms/inputs/radio-or-check/radio-or-check.input.tsx","app/components/forms/controls/controls.tsx","app/components/layout/layout/layout.tsx","app/app.tsx","reportWebVitals.ts","index.tsx","app/components/common/title/title.module.scss"],"names":["module","exports","CenteredContainer","width","children","xs","center","sm","md","className","styles","background","Chip","iconFamily","icon","text","style","content","Title","title_container","href","target","rel","title","COMMON","ACTIONS","UNSELECTED","UPLOAD","WRITE","Editor","value","onChange","name","rows","editor","event","FileLoader","extension","onUpdate","fileUploadRef","useRef","useState","error","setError","handleFileUpload","files","length","split","slice","reader","FileReader","readAsArrayBuffer","onloadend","ev","data","result","array","TextDecoder","decode","ref","visibility","type","file_upload_error","file_upload","onClick","current","click","onDragOver","e","preventDefault","onDrop","dataTransfer","file_upload_icon","padding","RadioOrCheck","disabled","id","radio_or_check","htmlFor","text_disabled","getTnOfIf","lines","siIndex","console","log","matches","toLowerCase","trim","match","fsiIndex","sinoIndex","j","checked","worstCase","bloqueSi","bloqueSino","toString","getTnOfFor","paraIndex","paraParameters","replace","vi","vf","inc","startsWith","t","internal","k","push","body","nerdamer","join","iterations","undefined","r","Controls","action","setAction","filename","setFilename","pseudocode","setPseudocode","tex","setTex","between","file_info","calc","clear","temp","map","line","i","ops","filter","v","raw","toTeX","getTn","math","Layout","library","add","fab","fas","far","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40e24ff7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"file_upload\":\"file-loader_file_upload__3yYHQ\",\"file_upload_error\":\"file-loader_file_upload_error__bjEPx\",\"file_upload_icon\":\"file-loader_file_upload_icon__3q9aX\",\"uploaded\":\"file-loader_uploaded__3GHVO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio_or_check\":\"radio-or-check_input_radio_or_check__1lJc4\",\"switch\":\"radio-or-check_input_switch__2EhuK\",\"text_disabled\":\"radio-or-check_input_text_disabled__1627h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"file_info\":\"controls_file_info__2i-Bl\",\"calc\":\"controls_calc__Sc4Ys\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"centered-container_background__1rKQt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"chip_content__1YM3g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editor\":\"editor_editor__149a9\"};","import React from 'react';\nimport { Col, Row } from 'react-styled-flexboxgrid';\n\nimport styles from './centered-container.module.scss';\n\ninterface Props {\n    width: number;\n    children: JSX.Element;\n}\n\nexport const CenteredContainer: React.FC<Props> = ({ width = 6, children }: Props) => {\n    return (\n        <Col xs={12}>\n            <Row center=\"xs\">\n                <Col xs={11} sm={8} md={width} className={styles.background}>\n                    {children}\n                </Col>\n            </Row>\n        </Col>\n    );\n};\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { IconName, IconPrefix } from '@fortawesome/fontawesome-svg-core';\nimport style from './chip.module.scss';\n\ninterface Props {\n    iconFamily: IconPrefix;\n    icon: IconName;\n    text: string;\n}\n\nexport const Chip: React.FC<Props> = ({ iconFamily, icon, text }: Props) => {\n    return (\n        <div className={style.content}>\n            <div>\n                <FontAwesomeIcon icon={[iconFamily, icon]} />\n            </div>\n            &nbsp;\n            {text}\n        </div>\n    );\n};\n","import React, { Fragment } from 'react';\nimport styles from './title.module.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Row } from 'react-styled-flexboxgrid';\n\nexport const Title: React.FC = () => {\n    return (\n        <Fragment>\n            <Row center=\"xs\">\n                <div className={styles.title_container}>\n                    <a\n                        href=\"https://raw.githubusercontent.com/cddemar/pseudocode-analyzer/5c8180d4563c3912be56940dc42b991dc1fb7f16/src/assets/docs/Reglas.pdf\"\n                        target=\"_blank\"\n                        rel=\"help noopener noreferrer\"\n                    >\n                        <span className={styles.title}>\n                            <FontAwesomeIcon icon={['fas', 'terminal']} />\n                        </span>\n                        <span className={styles.title}>&nbsp; Analizador de &nbsp;</span>\n                        <span className={styles.title}>Pseudocódigo</span>\n                    </a>\n                </div>\n            </Row>\n            <hr />\n        </Fragment>\n    );\n};\n","import { Globals } from './common/global';\n\nconst COMMON = new Globals();\n\nexport { COMMON };\n","interface IActions {\n    UNSELECTED: string;\n    UPLOAD: string;\n    WRITE: string;\n}\n\nexport class Globals {\n    ACTIONS: IActions = { UNSELECTED: 'ACTIONS.UNSELECTED', UPLOAD: 'ACTIONS.FILE_UPLOAD', WRITE: 'ACTIONS.WRITE' };\n}\n","import React, { Fragment } from 'react';\nimport styles from './editor.module.scss';\n\ninterface Props {\n    value: string;\n    onChange: (value: string) => void;\n}\n\nexport const Editor: React.FC<Props> = ({ value, onChange }: Props) => {\n    return (\n        <Fragment>\n            <textarea\n                name=\"editor\"\n                rows={8}\n                className={styles.editor}\n                value={value}\n                onChange={(event) => {\n                    if (event.target.value !== null) onChange(event.target.value);\n                }}\n            />\n        </Fragment>\n    );\n};\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { Fragment, useRef, useState } from 'react';\nimport { Col, Row } from 'react-styled-flexboxgrid';\nimport styles from './file-loader.module.scss';\n\ninterface Props {\n    extension: string;\n    onUpdate: (filename: string, pseudocode: string[]) => void;\n}\n\nexport const FileLoader: React.FC<Props> = ({ extension, onUpdate }: Props) => {\n    const fileUploadRef = useRef<HTMLInputElement>(null);\n    const [error, setError] = useState<string | null>(null);\n\n    const handleFileUpload = (files: FileList) => {\n        setError(null);\n        if (files) {\n            //console.log(files);\n            if (files.length > 1) {\n                setError('Solo se acepta un archivo');\n                return;\n            }\n            if (files.length == 1) {\n                if (files[0].name.split('.').slice(-1)[0] !== extension) {\n                    setError('Solo se aceptan archivos con extension .txt');\n                    return;\n                }\n                const reader = new FileReader();\n                reader.readAsArrayBuffer(files[0]);\n                reader.onloadend = (ev) => {\n                    if (ev.target) {\n                        const data = ev.target.result as Uint8Array;\n                        const text = new TextDecoder('utf-8').decode(data);\n                        const array = text.split('\\n');\n                        onUpdate(files[0].name, array);\n                    } else {\n                        setError('How did I get here?');\n                    }\n                };\n            }\n        }\n    };\n\n    return (\n        <Fragment>\n            <Row center=\"xs\">\n                <Col xs={12}>\n                    <input\n                        ref={fileUploadRef}\n                        style={{ visibility: 'hidden' }}\n                        type=\"file\"\n                        onChange={(event) => {\n                            //console.log(event);\n                            if (event.target.files !== null) handleFileUpload(event.target.files);\n                        }}\n                    />\n                    <div\n                        className={error !== null ? styles.file_upload_error : styles.file_upload}\n                        onClick={() => {\n                            if (fileUploadRef.current != null) fileUploadRef.current.click();\n                        }}\n                        onDragOver={(e) => {\n                            e.preventDefault();\n                        }}\n                        onDrop={(e) => {\n                            e.preventDefault();\n                            handleFileUpload(e.dataTransfer.files);\n                        }}\n                    >\n                        <FontAwesomeIcon icon={['fas', 'file-import']} className={styles.file_upload_icon} />\n                        <p style={{ padding: 5 }}>\n                            {error !== null ? error : `Cargue o seleccione un archivo .${extension} y sueltelo aquí`}\n                        </p>\n                    </div>\n                </Col>\n            </Row>\n        </Fragment>\n    );\n};\n","import React, { Fragment } from 'react';\nimport styles from './radio-or-check.input.module.scss';\n\ninterface Props {\n    type: string;\n    text: string;\n    name: string;\n    value: string;\n    onUpdate: React.Dispatch<React.SetStateAction<string | null>>;\n    disabled?: boolean;\n}\n\nexport const RadioOrCheck: React.FC<Props> = ({ type, text, name, value, onUpdate, disabled = false }: Props) => {\n    return (\n        <Fragment>\n            <input\n                id=\"radio-or-check\"\n                type={type}\n                name={name}\n                value={value}\n                className={styles.radio_or_check}\n                onChange={(event) => onUpdate(event.target.value)}\n                disabled={disabled}\n            />\n            {disabled ? (\n                <label htmlFor=\"radio-or-check\" className={styles.text_disabled}>\n                    {text}\n                </label>\n            ) : (\n                <label htmlFor=\"radio-or-check\">{text}</label>\n            )}\n        </Fragment>\n    );\n};\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { Fragment, useState } from 'react';\nimport { Row, Col } from 'react-styled-flexboxgrid';\nimport { COMMON } from '../../../../utils';\nimport { Chip } from '../../common';\nimport { Editor, FileLoader, RadioOrCheck } from '../inputs';\nimport nerdamer from 'nerdamer';\nimport TeX from '@matejmazur/react-katex';\n\nimport styles from './controls.module.scss';\n\ninterface LineNode {\n    value: string;\n    checked: boolean;\n}\n\nconst getTnOfIf = (lines: LineNode[], siIndex: number): string => {\n    // validations\n    console.log(' --- se encontro condicional --- ');\n    const parenthesisRegExp = /\\(([a-zA-Z][a-zA-Z0-9]*|\\d+)(\\s)*[<>=]*(\\s)*([a-zA-Z][a-zA-Z0-9]*|\\d+)\\)/g;\n    const matches = lines[siIndex].value.toLowerCase().trim().match(parenthesisRegExp) || [];\n\n    let fsiIndex = -1;\n    let sinoIndex = -1;\n\n    for (let j = siIndex; j < lines.length; j++) {\n        if (!lines[j].checked) {\n            lines[j].checked = true;\n            console.log(j, lines[j].value.trim());\n            if (lines[j].value.toLowerCase().trim().slice(0, 4) === 'sino') sinoIndex = j;\n            if (lines[j].value.toLowerCase().trim().slice(0, 3) === 'fsi') {\n                fsiIndex = j;\n                break;\n            }\n        }\n    }\n\n    let worstCase = 0;\n    if (fsiIndex > -1) {\n        if (sinoIndex === -1) {\n            worstCase = fsiIndex - siIndex - 1;\n        } else {\n            const bloqueSi = sinoIndex - siIndex - 1;\n            const bloqueSino = fsiIndex - sinoIndex - 1;\n            if (bloqueSi > bloqueSino) worstCase = bloqueSi;\n            else worstCase = bloqueSino;\n        }\n    }\n    console.log(' --- fin condicional con T(n) = ' + (matches.length + worstCase));\n    const sum = matches.length + worstCase;\n    return sum.toString();\n};\n\nconst getTnOfFor = (lines: LineNode[], paraIndex: number): string => {\n    console.log(' --- se encontro ciclo para --- ');\n    const paraParameters = lines[paraIndex].value.replace('para', '').trim().split(',');\n    let vi = paraParameters[0].trim().split('=')[1];\n    let vf = paraParameters[1];\n    let inc = paraParameters[2];\n    if (inc.startsWith('-')) {\n        const t = vf;\n        vf = vi;\n        vi = t;\n        inc = inc.replace('-', '');\n    }\n    const internal = [];\n    let k = 0;\n    for (let j = paraIndex; j < lines.length; j++) {\n        if (!lines[j].checked) {\n            k++;\n            lines[j].checked = true;\n            console.log(j, lines[j].value.trim());\n            if (\n                lines[j].value.toLowerCase().trim().slice(0, 2) === 'si' &&\n                lines[j].value.toLowerCase().trim().slice(0, 4) !== 'sino'\n            ) {\n                k--;\n                internal.push(getTnOfIf(lines, j));\n            } else if (lines[j].value.toLowerCase().trim().slice(0, 4) === 'para') {\n                k--;\n                internal.push(getTnOfFor(lines, j));\n            } else if (lines[j].value.toLowerCase().trim().slice(0, 5) === 'fpara') {\n                k--;\n                break;\n            }\n        }\n    }\n    const body = nerdamer(`(${internal.join('+') || 0} +${k} +2)`).toString();\n    const iterations = nerdamer(`((${vf}-${vi}+1)/${inc})`, undefined, 'expand').toString();\n    const r = nerdamer(`(${iterations}) * (${body}) +2`).toString();\n    console.log(` --- fin ciclo para con T(n) = (${iterations}) * (${body}) + 2 = ${r}`);\n    return r;\n};\n\nconst getTn = (pseudocode: string[]): string => {\n    const temp = [];\n    const lines: LineNode[] = pseudocode.map((line) => {\n        return { value: line, checked: false };\n    });\n\n    console.log(\n        'ver reglas en:  https://raw.githubusercontent.com/cddemar/pseudocode-analyzer/5c8180d4563c3912be56940dc42b991dc1fb7f16/src/assets/docs/Reglas.pdf',\n    );\n    console.log(' --- inicio --- ');\n\n    for (let i = 0; i < lines.length; i++) {\n        if (!lines[i].checked) {\n            lines[i].checked = true;\n            console.log(i, lines[i].value.trim());\n\n            if (lines[i].value.toLowerCase().trim() === 'inicio') {\n                temp.push(0);\n            } else if (lines[i].value.toLowerCase().trim() === 'pare') {\n                temp.push(0);\n            } else if (lines[i].value.toLowerCase().trim().length === 0) {\n                temp.push(0);\n            } else if (\n                lines[i].value.toLowerCase().trim().slice(0, 2) === 'si' &&\n                lines[i].value.toLowerCase().trim().slice(0, 4) !== 'sino'\n            ) {\n                temp.push(getTnOfIf(lines, i));\n            } else if (lines[i].value.toLowerCase().trim().slice(0, 4) === 'para') {\n                temp.push(getTnOfFor(lines, i));\n            } else {\n                temp.push(1);\n            }\n        }\n    }\n\n    const ops = temp.filter((v) => v !== '0' && v !== 0).join('+');\n    const raw = nerdamer(ops, undefined, 'expand');\n\n    console.log(raw.toString());\n    console.log(' --- fin --- ');\n    return raw.toTeX();\n};\n\nexport const Controls: React.FC = () => {\n    const [action, setAction] = useState<string | null>(COMMON.ACTIONS.UNSELECTED);\n    const [filename, setFilename] = useState<string | null>(null);\n    const [pseudocode, setPseudocode] = useState<string[] | null>(['']);\n    const [tex, setTex] = useState<string | null>('');\n    return (\n        <Fragment>\n            <Row center=\"xs\">\n                <Col xs={5} sm={4} md={3}>\n                    <RadioOrCheck\n                        type=\"radio\"\n                        text=\"Cargar archivo\"\n                        name=\"action\"\n                        value={COMMON.ACTIONS.UPLOAD}\n                        onUpdate={setAction}\n                    />\n                </Col>\n                <Col xs={5} sm={4} md={3}>\n                    <RadioOrCheck\n                        type=\"radio\"\n                        text=\"Escribir algoritmo\"\n                        name=\"action\"\n                        value={COMMON.ACTIONS.WRITE}\n                        onUpdate={setAction}\n                    />\n                </Col>\n            </Row>\n            <Row center=\"xs\">\n                <Col xs={10}>\n                    {action === COMMON.ACTIONS.UPLOAD ? (\n                        <FileLoader\n                            extension=\"txt\"\n                            onUpdate={(filename: string, pseudocode: string[]) => {\n                                setFilename(filename);\n                                setPseudocode(pseudocode);\n                            }}\n                        />\n                    ) : null}\n                </Col>\n            </Row>\n            {filename !== null && pseudocode !== null && action === COMMON.ACTIONS.UPLOAD ? (\n                <Row center=\"xs\">\n                    <Col xs={10}>\n                        <br />\n                        <Row between=\"xs\">\n                            <Chip iconFamily=\"fas\" icon=\"file-alt\" text={filename}></Chip>\n                            <span className={styles.file_info}>tiene {pseudocode.length} líneas</span>\n                        </Row>\n                    </Col>\n                </Row>\n            ) : null}\n            {filename !== null || action === COMMON.ACTIONS.WRITE ? (\n                <Row center=\"xs\">\n                    <Col xs={10}>\n                        <br />\n                        <Row>\n                            <p>{action === COMMON.ACTIONS.WRITE ? 'Contenido' : 'Contenido del archivo'} (editable):</p>\n                        </Row>\n                        <Row>\n                            <Editor\n                                value={pseudocode?.join('\\n') || ''}\n                                onChange={(value) => setPseudocode(value.split('\\n'))}\n                            />\n                        </Row>\n                        <br />\n                        <Row>\n                            <button\n                                className={styles.calc}\n                                onClick={() => {\n                                    if (pseudocode === null) return;\n                                    console.clear();\n                                    setTex(getTn(pseudocode));\n                                }}\n                            >\n                                <FontAwesomeIcon icon={['fas', 'calculator']} />\n                                <i>&nbsp; Calcular T(n)</i>\n                            </button>\n                        </Row>\n                        <br />\n                        {tex ? (\n                            <Fragment>\n                                <br />\n                                <Row>\n                                    <TeX math={`T(n) = ${tex}`} />\n                                </Row>\n                            </Fragment>\n                        ) : null}\n                    </Col>\n                </Row>\n            ) : null}\n\n            <br />\n        </Fragment>\n    );\n};\n","import React, { Fragment } from 'react';\nimport { Title } from '../../common';\nimport { Controls } from '../../forms';\n\nexport const Layout: React.FC = () => {\n    return (\n        <Fragment>\n            <Title />\n            <Controls />\n        </Fragment>\n    );\n};\n","import React from 'react';\nimport './app.scss';\n\n// FONT AWESOME\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport { far } from '@fortawesome/free-regular-svg-icons';\nlibrary.add(fab, fas, far);\n\nimport { CenteredContainer, Layout } from './components/layout';\n\nexport const App: React.FC = () => {\n    return (\n        <CenteredContainer width={6}>\n            <Layout />\n        </CenteredContainer>\n    );\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './app/app';\nimport reportWebVitals from './reportWebVitals';\n\n// FONT-AWESOME\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nlibrary.add(fab, fas);\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"title_title__1MJOp\",\"title_container\":\"title_title_container__3IvbC\"};"],"sourceRoot":""}